{"version":3,"sources":["index.js"],"names":["book","undefined","book_chapters","str","JSON","parse","i","chapters","push","key","value","data","name","marks","load_book","popups","vwidth","document","documentElement","clientWidth","vheight","clientHeight","sleep","ms","a","Promise","resolve","setTimeout","mapStyle","height","width","curr_point","L","latLng","curr_z","Map","props","pause","persons","play","bind","length","datablock","this","remove","alert","popup","setLatLng","setContent","openOn","mymap","then","shift","id","style","map","setView","setMaxBounds","latLngBounds","tileLayer","minZoom","maxZoom","updateWhenZooming","updateWhenIdle","bounds","accessToken","addTo","getCenter","getZoom","React","App","state","activeStory","activeScreen","activePanelChapter","activeChapter","MarksInChapter","onStoryChange","onIntroClick","onChapterCellClick","onMarkCellClick","e","setState","currentTarget","dataset","story","index","buf","forEach","mark","mark_id","found","element","activeView","paddingTop","paddingBottom","color","textAlign","verticalAlign","size","mode","onClick","tabbar","selected","data-story","text","activePanel","Array","prototype","call","chapter_struct","expandable","mark_name","expandble","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.e7696b31.chunk.js","sourcesContent":["import * as React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Root, Epic, View, Panel, PanelHeader, Tabbar, TabbarItem, Button, Div, List, Cell } from '@vkontakte/vkui';\nimport Icon28GlobeOutline from '@vkontakte/icons/dist/28/globe_outline';\nimport Icon28ListOutline from '@vkontakte/icons/dist/28/list_outline';\nimport './vkui.css';\nimport L from 'leaflet';\n\n\nvar book = undefined;\nvar book_chapters = [];\n//Процедура загрузки книги\nfunction load_book(str) {\n  book = JSON.parse(str);\n\n  for (var i = 1; i !== book.chapters; i++)\n    book_chapters.push({key: i, value: [book.data[i].name, i, book.data[i].marks, book.data[i].data]});\n\n};\n\nload_book('{\"book_name\": \"Мастер и Маргарита\",\"chapters\": 2,\"data\": {\"1\" : {\"name\": \"Первая глава\",\"marks\": [[\"0\", \"Начало\"],[\"1\", \"Середина\"],[\"2\", \"Конец\"]], \"data\": [[\"mark\", \"0\"],[\"Кот\", [55.7522, 37.6156], 2],[\"Кот\", [55.7622, 37.7156], 4],\t[\"mark\", \"1\"],[\"del\", \"Кот\"],[\"mark\", \"2\"],[\"Мастер\", [55.8522, 37.5956], 3]]},\"2\" : {\"name\": \"Вторая глава\",\"marks\": [[\"0\", \"Начало\"],[\"center\", \"Середина\"],[\"1\", \"Середина\"],[\"end\", \"Конец\"]],\"data\": [[\"mark\", \"0\"],[\"Азазелло\", [55.7522, 37.6156], 2],[\"Бегемот\", [55.7522, 37.6156], 4],\t[\"mark\", \"1\"],[\"del\", \"Бегемот\"],[\"Азазелло\", [55.8522, 37.5956], 3],[\"mark\", \"2\"],[\"del\", \"Азазелло\"]]}} }');\n\nvar popups = [];\n\nvar vwidth = document.documentElement.clientWidth;   //Ширина\nvar vheight = document.documentElement.clientHeight; //Высота Viewport\n\nasync function sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nlet mapStyle = { //Структура стиля карты\n  height: vheight,\n  width: vwidth\n};\n//Если ширина экрана меньше высоты (мобильный экран)\nif (vwidth < vheight)\n  mapStyle.height = vwidth; //Делаем карту квадратной\nelse\n  mapStyle.height = mapStyle.height - 102; //В ином случае заполняем весь Viewport\n\n\nvar curr_point = L.latLng(55.7522, 37.6156); //Текущие координаты карты\nvar curr_z = 14; //Текущее увеличение карты\n\n//Класс карты\nexport default class Map extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.pause = false;\n    this.persons = {};\n\n    this.play = this.play.bind(this);\n  }\n\n  async play() {\n    while (popups.length > 0) {\n      var datablock = popups[0];\n\n      if (datablock[0] === \"del\") {\n        if (datablock[1] in this.persons) {\n          var buf = this.persons[datablock[1]];\n          buf.remove();\n          this.persons[datablock[1]] = undefined;\n        }\n        else\n          alert(\"ОШИБКА: Попытка удаления с карты несуществующего персонажа.\");\n      }\n      else {\n        if (datablock[0] in this.persons)\n          this.persons[datablock[0]].remove();\n\n        this.persons[datablock[0]] = L.popup()\n          .setLatLng(L.latLng(datablock[1][0], datablock[1][1]))\n          .setContent(\"<br>\" + datablock[0] + \"<br/>\")\n          .openOn(this.mymap);\n\n        await sleep(datablock[2] * 1000).then()\n      }\n      \n      popups.shift();\n      if (this.pause)\n        break;\n    };\n  }\n\n  //Рендер DOM\n  render() {\n    return (\n      <div id=\"mapid\" style={mapStyle}></div>\n    );\n  }\n\n  //Вторичный рендер данных карты\n  componentDidMount() {\n    //Создаём объект карты\n    this.mymap = L.map('mapid').setView(curr_point, curr_z).setMaxBounds(L.latLngBounds(L.latLng(56.0, 37), L.latLng(55.5, 38.25)));\n    //Отправляем запрос в Mapbox \n    L.tileLayer(\"https://api.mapbox.com/styles/v1/black-horse/ck9423ydx3ezj1ip93plhxxbb/tiles/{z}/{x}/{y}?access_token={accessToken}\", {\n      minZoom: 10,\n      maxZoom: 17,\n      updateWhenZooming: false,\n      updateWhenIdle: true,\n      bounds: L.latLngBounds(L.latLng(56.25, 35.0), L.latLng(55.25, 39.0)),\n      accessToken: \"pk.eyJ1IjoiYmxhY2staG9yc2UiLCJhIjoiY2thMndiMDg5MDdjMDNsbGt1eHdoYjR6diJ9.z1NmmuGOTudn-b5H5NDtWg\"\n    }).addTo(this.mymap);\n\n    this.play();\n  }\n\n  //Удаление элемента с экрана\n  componentWillUnmount() {\n    //Запоминаем текущие параметры\n    curr_point = this.mymap.getCenter();\n    curr_z = this.mymap.getZoom();\n    //Очищаем память\n    this.mymap = null;\n  }\n}\n\n\nclass App extends React.Component {\n  constructor (props) {\n    super(props);\n\n    this.state = {\n      activeStory: 'map',\n      activeScreen: 'intro',\n      activePanelChapter: 'chapter_select',\n      activeChapter: 1,\n      MarksInChapter: []\n    };\n    this.onStoryChange = this.onStoryChange.bind(this);\n    this.onIntroClick = this.onIntroClick.bind(this);\n    this.onChapterCellClick = this.onChapterCellClick.bind(this);\n    this.onMarkCellClick = this.onMarkCellClick.bind(this);\n  }\n\n  onStoryChange (e) {\n    this.setState({ activeStory: e.currentTarget.dataset.story });\n  }\n\n  onIntroClick (e) {\n    this.setState({ activeScreen: 'things' });\n  }\n\n  onChapterCellClick(e, index) {\n    var buf = []\n    var i = 0\n    book_chapters[index - 1].value[2].forEach(mark => {\n      buf.push({key: i, value: mark});\n      ++i;\n    });\n    \n    this.setState({activeChapter: index, MarksInChapter: buf});\n    this.setState({ activePanelChapter: 'mark_select' });\n  }\n\n  onMarkCellClick(e, str) {\n    var mark_id = this.state.MarksInChapter[str].value[0];\n    var found = false;\n\n    book_chapters[this.state.activeChapter - 1].value[3].forEach(element => {\n      if (found && element[0] !== \"mark\") \n        popups.push(element);\n      if (element[0] === \"mark\" && element[1] === mark_id) {\n        found = true;\n      }\n    });\n    this.setState({ activePanelChapter: 'chapter_select', activeStory: 'map'});\n  }\n  render() {\n    return (\n      <Root activeView={this.state.activeScreen}>\n        <View id=\"intro\">         \n          <Div style={{ paddingTop: 60, paddingBottom: 60, color: 'gray' }}>\n            <p style={{textAlign: 'center', verticalAlign: 'middle'}}>Добро пожаловать!</p>\n            <p>Это приложение разработано группой юных аналитиков в рамках проектной деятельности в Академии Калашников. Оно поможет людям, любящим книги и путешествия, узнать побольше о тех местах, \n            где происходили события из книги, и даже пройти по маршрутам её героев. Приложение понятно и легко в использовании.</p>\n            <p>Продукт находится в активной разработке и совсем скоро сможет порадовать интересными новинками! Так что обязательно оставляйте обратную связь разработчикам или пишите свои пожелания!</p>\n            <Button size=\"xl\" mode=\"secondary\" onClick={this.onIntroClick}>\n              Продолжить\n            </Button>\n          </Div>\n        </View>\n        <Epic id=\"things\" activeStory={this.state.activeStory} tabbar={\n          <Tabbar>\n            <TabbarItem\n              onClick={this.onStoryChange}\n              selected={this.state.activeStory === 'map'}\n              data-story=\"map\"\n              text=\"Просмотр\"\n            ><Icon28GlobeOutline/></TabbarItem>\n            <TabbarItem\n              onClick={this.onStoryChange}\n              selected={this.state.activeStory === 'chapter'}\n              data-story=\"chapter\"\n              text=\"Главы\"\n            ><Icon28ListOutline/></TabbarItem>\n          </Tabbar>\n        }> \n          <View id=\"map\" activePanel=\"map\">\n            <Panel id=\"map\">\n              <PanelHeader>Карта</PanelHeader>\n              <Map/>\n            </Panel>\n          </View>\n          <View id=\"chapter\" activePanel={this.state.activePanelChapter}>\n            <Panel id=\"chapter_select\">\n              <PanelHeader>Выбор главы</PanelHeader>\n              <List>\n                {Array.prototype.map.call(book_chapters, function (chapter_struct) {\n                  return <Cell expandable onClick={(e) => this.onChapterCellClick(e, chapter_struct.value[1])}>Глава {chapter_struct.value[1]}: {chapter_struct.value[0]}</Cell>;\n                }, this)}\n              </List>\n            </Panel>\n            <Panel id=\"mark_select\">\n              <PanelHeader>Выбор закладки</PanelHeader>\n              <List>\n                {Array.prototype.map.call(this.state.MarksInChapter, function (mark_name) {\n                return <Cell expandble onClick={(e) => this.onMarkCellClick(e, mark_name.value[0])}>{mark_name.value[1]}</Cell>;\n                }, this)}\n              </List>\n            </Panel> \n          </View>\n        </Epic>\n      </Root>\n    )\n  }\n}\n\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}