{"version":3,"sources":["index.js"],"names":["vwidth","document","documentElement","clientWidth","vheight","clientHeight","mapStyle","height","width","curr_point","L","latLng","curr_z","Map","this","mymap","map","setView","tileLayer","attribution","maxZoom","id","tileSize","zoomOffset","detectRetina","accessToken","addTo","getCenter","getZoom","style","React","Component","App","props","state","activeStory","onStoryChange","bind","e","setState","currentTarget","dataset","story","tabbar","onClick","selected","data-story","text","activePanel","ReactDOM","render","getElementById"],"mappings":"sTAUIA,EAASC,SAASC,gBAAgBC,YAClCC,EAAUH,SAASC,gBAAgBG,aAEnCL,EAASI,IACXA,EAAUJ,GAEZ,IAAMM,EAAW,CACXC,OAAQH,EACRI,MAAOR,GAGTS,EAAaC,IAAEC,OAAO,QAAS,SAC/BC,EAAS,GACPC,E,kLAEFC,KAAKC,MAAQL,IAAEM,IAAI,SAASC,QAAQR,EAAYG,GAChDF,IAAEQ,UAAU,qFAAsF,CAChGC,YAAa,6NACbC,QAAS,GACTC,GAAI,qBACJC,SAAU,IACVC,YAAa,EACbC,cAAc,EACdC,YAAa,mGACZC,MAAMZ,KAAKC,S,6CAIdN,EAAaK,KAAKC,MAAMY,YACxBf,EAASE,KAAKC,MAAMa,UACpBd,KAAKC,MAAQ,O,+BAIb,OACE,yBAAKM,GAAG,QAAQQ,MAAOvB,Q,GAtBXwB,IAAMC,WA2BlBC,E,kDACJ,WAAaC,GAAQ,IAAD,8BAClB,cAAMA,IAEDC,MAAQ,CACXC,YAAa,OAEf,EAAKC,cAAgB,EAAKA,cAAcC,KAAnB,gBANH,E,0DASLC,GACbxB,KAAKyB,SAAS,CAAEJ,YAAaG,EAAEE,cAAcC,QAAQC,U,+BAIrD,OACE,kBAAC,IAAD,CAAMP,YAAarB,KAAKoB,MAAMC,YAAaQ,OACzC,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,QAAS9B,KAAKsB,cACdS,SAAqC,QAA3B/B,KAAKoB,MAAMC,YACrBW,aAAW,MACXC,KAAK,oDACN,kBAAC,IAAD,OACD,kBAAC,IAAD,CACEH,QAAS9B,KAAKsB,cACdS,SAAqC,YAA3B/B,KAAKoB,MAAMC,YACrBW,aAAW,UACXC,KAAK,kCACN,kBAAC,IAAD,SAGH,kBAAC,IAAD,CAAM1B,GAAG,MAAM2B,YAAY,OACzB,kBAAC,IAAD,CAAO3B,GAAG,OACR,kBAAC,IAAD,uCACA,kBAACR,EAAD,QAGJ,kBAAC,IAAD,CAAMQ,GAAG,UAAU2B,YAAY,WAC7B,kBAAC,IAAD,CAAO3B,GAAG,WACR,kBAAC,IAAD,6E,GAxCMS,IAAMC,WAgDxBkB,IAASC,OAAO,kBAAClB,EAAD,MAAQ/B,SAASkD,eAAe,W","file":"static/js/main.a472eaba.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Epic, View, Panel, PanelHeader, Tabbar, TabbarItem } from '@vkontakte/vkui';\nimport Icon28GlobeOutline from '@vkontakte/icons/dist/28/globe_outline';\nimport Icon28ListOutline from '@vkontakte/icons/dist/28/list_outline';\nimport './vkui.css';\n\nimport L from 'leaflet';\n\nvar vwidth = document.documentElement.clientWidth;\nvar vheight = document.documentElement.clientHeight;\n\nif (vwidth < vheight) {\n  vheight = vwidth;\n}\nconst mapStyle = {\n      height: vheight,\n      width: vwidth\n};\n\nvar curr_point = L.latLng(55.7522, 37.6156);\nvar curr_z = 15;\nclass Map extends React.Component {\n  componentDidMount() {\n    this.mymap = L.map('mapid').setView(curr_point, curr_z)\n    L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}', {\n      attribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, <a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>',\n      maxZoom: 18,\n      id: 'mapbox/streets-v11',\n      tileSize: 512,\n      zoomOffset: -1,\n      detectRetina: true,\n      accessToken: 'pk.eyJ1IjoiYmxhY2staG9yc2UiLCJhIjoiY2s5MWZzYThmMDNmcDNucGFnZm9yeXQ0MCJ9.SD05sXaBZ2KDMLvLSeeVVQ'\n    }).addTo(this.mymap);\n  }\n\n  componentWillUnmount() {\n    curr_point = this.mymap.getCenter();\n    curr_z = this.mymap.getZoom();\n    this.mymap = null;\n  }\n\n  render() {\n    return(\n      <div id=\"mapid\" style={mapStyle}></div>\n    );\n  }\n}\n\nclass App extends React.Component {\n  constructor (props) {\n    super(props);\n\n    this.state = {\n      activeStory: 'map'\n    };\n    this.onStoryChange = this.onStoryChange.bind(this);\n  }\n\n  onStoryChange (e) {\n    this.setState({ activeStory: e.currentTarget.dataset.story });\n  }\n\n  render() {\n    return (\n      <Epic activeStory={this.state.activeStory} tabbar={\n        <Tabbar>\n          <TabbarItem\n            onClick={this.onStoryChange}\n            selected={this.state.activeStory === 'map'}\n            data-story=\"map\"\n            text=\"Просмотр\"\n          ><Icon28GlobeOutline/></TabbarItem>\n          <TabbarItem\n            onClick={this.onStoryChange}\n            selected={this.state.activeStory === 'chapter'}\n            data-story=\"chapter\"\n            text=\"Главы\"\n          ><Icon28ListOutline/></TabbarItem>\n        </Tabbar>\n      }>\n        <View id=\"map\" activePanel=\"map\">\n          <Panel id=\"map\">\n            <PanelHeader>Карта</PanelHeader>\n            <Map/>\n          </Panel>\n        </View>\n        <View id=\"chapter\" activePanel=\"chapter\">\n          <Panel id=\"chapter\">\n            <PanelHeader>Выбор главы</PanelHeader>\n          </Panel>\n        </View>\n      </Epic>\n    )\n  }\n}\n\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}