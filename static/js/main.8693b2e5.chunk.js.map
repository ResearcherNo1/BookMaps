{"version":3,"sources":["map.js","index.js"],"names":["popups","vwidth","document","documentElement","clientWidth","vheight","clientHeight","sleep","ms","Promise","resolve","setTimeout","mapStyle","height","width","curr_point","L","latLng","curr_z","Map","props","pause","persons","play","bind","length","datablock","this","remove","alert","popup","setLatLng","setContent","openOn","mymap","then","shift","id","style","map","setView","setMaxBounds","latLngBounds","tileLayer","minZoom","maxZoom","updateWhenZooming","updateWhenIdle","bounds","accessToken","addTo","getCenter","getZoom","React","Component","my_popups","book","undefined","book_chapters","str","JSON","parse","i","chapters","push","key","value","data","name","marks","load_book","App","state","activeStory","activeScreen","activePanelChapter","activeChapter","MarksInChapter","onStoryChange","onIntroClick","onChapterCellClick","onMarkCellClick","e","setState","currentTarget","dataset","story","index","buf","forEach","mark","mark_id","found","element","activeView","paddingTop","paddingBottom","color","textAlign","verticalAlign","size","mode","onClick","tabbar","selected","data-story","text","activePanel","Array","prototype","call","chapter_struct","expandable","mark_name","expandble","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.8693b2e5.chunk.js","sourcesContent":["//Импорт библиотек\r\nimport React from 'react';\r\nimport L from 'leaflet';\r\nlet popups = [];\r\nexport {popups};\r\n\r\nvar vwidth = document.documentElement.clientWidth;   //Ширина\r\nvar vheight = document.documentElement.clientHeight; //Высота Viewport\r\n\r\nfunction sleep(ms) {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\nlet mapStyle = { //Структура стиля карты\r\n  height: vheight,\r\n  width: vwidth\r\n};\r\n//Если ширина экрана меньше высоты (мобильный экран)\r\nif (vwidth < vheight)\r\n  mapStyle.height = vwidth; //Делаем карту квадратной\r\nelse\r\n  mapStyle.height = mapStyle.height - 102; //В ином случае заполняем весь Viewport\r\n\r\n\r\nvar curr_point = L.latLng(55.7522, 37.6156); //Текущие координаты карты\r\nvar curr_z = 14; //Текущее увеличение карты\r\n\r\n//Класс карты\r\nexport default class Map extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.pause = false;\r\n    this.persons = {};\r\n\r\n    this.play = this.play.bind(this);\r\n  }\r\n\r\n  async play() {\r\n    while (popups.length > 0) {\r\n      var datablock = popups[0];\r\n\r\n      if (datablock[0] === \"del\") {\r\n        if (datablock[1] in this.persons) {\r\n          this.persons[datablock[1]].remove();\r\n          delete this.persons.datablock[1];\r\n        }\r\n        else\r\n          alert(\"ОШИБКА: Попытка удаления с карты несуществующего персонажа.\");\r\n      }\r\n      else {\r\n        if (datablock[0] in this.persons)\r\n          this.persons[datablock[0]].remove();\r\n\r\n        this.persons[datablock[0]] = L.popup()\r\n          .setLatLng(L.latLng(datablock[1][0], datablock[1][1]))\r\n          .setContent(\"<br>\" + datablock[0] + \"<br/>\")\r\n          .openOn(this.mymap);\r\n\r\n        await sleep(datablock[2] * 1000).then()\r\n      }\r\n      \r\n      popups.shift();\r\n      if (this.pause)\r\n        break;\r\n    };\r\n  }\r\n\r\n  //Рендер DOM\r\n  render() {\r\n    return (\r\n      <div id=\"mapid\" style={mapStyle}></div>\r\n    );\r\n  }\r\n\r\n  //Вторичный рендер данных карты\r\n  async componentDidMount() {\r\n    //Создаём объект карты\r\n    this.mymap = L.map('mapid').setView(curr_point, curr_z).setMaxBounds(L.latLngBounds(L.latLng(56.0, 37), L.latLng(55.5, 38.25)));\r\n    //Отправляем запрос в Mapbox \r\n    L.tileLayer(\"https://api.mapbox.com/styles/v1/black-horse/ck9423ydx3ezj1ip93plhxxbb/tiles/{z}/{x}/{y}?access_token={accessToken}\", {\r\n      minZoom: 10,\r\n      maxZoom: 17,\r\n      updateWhenZooming: false,\r\n      updateWhenIdle: true,\r\n      bounds: L.latLngBounds(L.latLng(56.25, 35.0), L.latLng(55.25, 39.0)),\r\n      accessToken: \"pk.eyJ1IjoiYmxhY2staG9yc2UiLCJhIjoiY2thMndiMDg5MDdjMDNsbGt1eHdoYjR6diJ9.z1NmmuGOTudn-b5H5NDtWg\"\r\n    }).addTo(this.mymap);\r\n    this.play();\r\n    await sleep(10000).then(() => {this.pause = true;});\r\n  }\r\n\r\n  //Удаление элемента с экрана\r\n  componentWillUnmount() {\r\n    //Запоминаем текущие параметры\r\n    curr_point = this.mymap.getCenter();\r\n    curr_z = this.mymap.getZoom();\r\n    //Очищаем память\r\n    this.mymap = null;\r\n  }\r\n}","import * as React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Root, Epic, View, Panel, PanelHeader, Tabbar, TabbarItem, Button, Div, List, Cell } from '@vkontakte/vkui';\nimport Icon28GlobeOutline from '@vkontakte/icons/dist/28/globe_outline';\nimport Icon28ListOutline from '@vkontakte/icons/dist/28/list_outline';\nimport './vkui.css';\n\nimport Map, {popups} from './map.js';\nlet my_popups = popups;\n\nvar book = undefined;\nvar book_chapters = [];\n//Процедура загрузки книги\nfunction load_book(str) {\n  book = JSON.parse(str);\n\n  for (var i = 1; i !== book.chapters; i++)\n    book_chapters.push({key: i, value: [book.data[i].name, i, book.data[i].marks, book.data[i].data]});\n\n};\n\nload_book('{\"book_name\": \"Мастер и Маргарита\",\"chapters\": 2,\"data\": {\"1\" : {\"name\": \"Первая глава\",\"marks\": [[\"0\", \"Начало\"],[\"1\", \"Середина\"],[\"end\", \"Конец\"]], \"data\": [[\"mark\", \"0\"],[\"Кот\", [55.7522, 37.6156], 2],[\"Кот\", [55.7622, 37.7156], 4],\t[\"mark\", \"1\"],[\"del\", \"Кот\"],[\"mark\", \"2\"],[\"Мастер\", [55.8522, 37.5956], 3]]},\"2\" : {\"name\": \"Вторая глава\",\"marks\": [[\"0\", \"Начало\"],[\"center\", \"Середина\"],[\"1\", \"Середина\"],[\"end\", \"Конец\"]],\"data\": [[\"mark\", \"0\"],[\"Азазелло\", [55.7522, 37.6156], 2],[\"Бегемот\", [55.7522, 37.6156], 4],\t[\"mark\", \"1\"],[\"del\", \"Бегемот\"],[\"mark\", \"center\"],[\"Азазелло\", [55.8522, 37.5956], 3],[\"mark\", \"end\"],[\"del\", \"Азазелло\"]]}} }');\n\nclass App extends React.Component {\n  constructor (props) {\n    super(props);\n\n    this.state = {\n      activeStory: 'map',\n      activeScreen: 'intro',\n      activePanelChapter: 'chapter_select',\n      activeChapter: 1,\n      MarksInChapter: []\n    };\n    this.onStoryChange = this.onStoryChange.bind(this);\n    this.onIntroClick = this.onIntroClick.bind(this);\n    this.onChapterCellClick = this.onChapterCellClick.bind(this);\n    this.onMarkCellClick = this.onMarkCellClick.bind(this);\n  }\n\n  onStoryChange (e) {\n    this.setState({ activeStory: e.currentTarget.dataset.story });\n  }\n\n  onIntroClick (e) {\n    this.setState({ activeScreen: 'things' });\n  }\n\n  onChapterCellClick(e, index) {\n    var buf = []\n    var i = 0\n    book_chapters[index - 1].value[2].forEach(mark => {\n      buf.push({key: i, value: mark});\n      ++i;\n    });\n    this.setState({activeChapter: index, MarksInChapter: buf});\n    this.setState({ activePanelChapter: 'mark_select' });\n  }\n\n  onMarkCellClick(e, str) {\n    var mark_id = this.state.MarksInChapter[str];\n    var found = false;\n    book_chapters[this.state.activeChapter - 1].value[3].forEach(element => {\n      if (found && element[0] !== \"mark\") \n        my_popups.push(element);\n      if (element[0] === \"mark\" && element[1] === mark_id) {\n        found = true;\n      }\n    });\n    this.setState({ activePanelChapter: 'chapter_select', activeStory: 'map'});\n  }\n  render() {\n    return (\n      <Root activeView={this.state.activeScreen}>\n        <View id=\"intro\">         \n          <Div style={{ paddingTop: 60, paddingBottom: 60, color: 'gray' }}>\n            <p style={{textAlign: 'center', verticalAlign: 'middle'}}>Добро пожаловать!</p>\n            <p>Это приложение разработано группой юных аналитиков в рамках проектной деятельности в Академии Калашников. Оно поможет людям, любящим книги и путешествия, узнать побольше о тех местах, \n            где происходили события из книги, и даже пройти по маршрутам её героев. Приложение понятно и легко в использовании.</p>\n            <p>Продукт находится в активной разработке и совсем скоро сможет порадовать интересными новинками! Так что обязательно оставляйте обратную связь разработчикам или пишите свои пожелания!</p>\n            <Button size=\"xl\" mode=\"secondary\" onClick={this.onIntroClick}>\n              Продолжить\n            </Button>\n          </Div>\n        </View>\n        <Epic id=\"things\" activeStory={this.state.activeStory} tabbar={\n          <Tabbar>\n            <TabbarItem\n              onClick={this.onStoryChange}\n              selected={this.state.activeStory === 'map'}\n              data-story=\"map\"\n              text=\"Просмотр\"\n            ><Icon28GlobeOutline/></TabbarItem>\n            <TabbarItem\n              onClick={this.onStoryChange}\n              selected={this.state.activeStory === 'chapter'}\n              data-story=\"chapter\"\n              text=\"Главы\"\n            ><Icon28ListOutline/></TabbarItem>\n          </Tabbar>\n        }> \n          <View id=\"map\" activePanel=\"map\">\n            <Panel id=\"map\">\n              <PanelHeader>Карта</PanelHeader>\n              <Map/>\n            </Panel>\n          </View>\n          <View id=\"chapter\" activePanel={this.state.activePanelChapter}>\n            <Panel id=\"chapter_select\">\n              <PanelHeader>Выбор главы</PanelHeader>\n              <List>\n                {Array.prototype.map.call(book_chapters, function (chapter_struct) {\n                  return <Cell expandable onClick={(e) => this.onChapterCellClick(e, chapter_struct.value[1])}>Глава {chapter_struct.value[1]}: {chapter_struct.value[0]}</Cell>;\n                }, this)}\n              </List>\n            </Panel>\n            <Panel id=\"mark_select\">\n              <PanelHeader>Выбор закладки</PanelHeader>\n              <List>\n                {Array.prototype.map.call(this.state.MarksInChapter, function (mark_name) {\n                return <Cell expandble onClick={(e) => this.onMarkCellClick(e, mark_name.value[0])}>{mark_name.value[1]}</Cell>;\n                }, this)}\n              </List>\n            </Panel> \n          </View>\n        </Epic>\n      </Root>\n    )\n  }\n}\n\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}